# Commande de cuve à vagues NOVA Physics
# Gui pour commande d'un arduino
# fichier de définition d'UI

#:import __version__ main.__version__

<Widget>
    font_name: 'Poppins-Regular.ttf'
    font_size: sp(16)

BoxLayout:
    orientation: 'vertical'
    spacing: dp(10)
    padding: dp(20)
    BoxLayout:
        id : mode
        spacing: dp(20)
        orientation: 'horizontal'
        Label:
            text: 'Mode'
        Spinner:
            id: spinner_mode
            values: 'Continuous', 'Burst'
            text: self.values[0]
            on_text: app.set_mode(self.text == 'Burst')
    BoxLayout:
        id: freq
        spacing: dp(20)
        orientation: 'horizontal'
        Label:
            size_hint_y: None
            height: input_freq.minimum_height
            size_hint_x: None
            width: dp(150)
            text: 'Frequency (Hz)'
        Slider:
            id: slider_freq
            height: input_freq.minimum_height
            size_hint_y: None
            min: 0
            max: 5
            orientation: 'horizontal'
            on_value: app.reflect_val('slider', input_freq, slider_freq,0,5,3)
            on_touch_up: if args[1].grab_current == self: app.update_freq()
        TextInput:
            id: input_freq
            size_hint_y: None
            height: self.minimum_height
            size_hint_x: None
            multiline: False
            width: dp(100)
            text: '0.000'
            on_text_validate: app.reflect_val('input', input_freq, slider_freq, 0, 5, 3); app.update_freq()
    BoxLayout:
        id: pulse
        disabled: True
        spacing: dp(20)
        orientation: 'horizontal'
        Label:
            size_hint_y: None
            height: input_pulses.minimum_height
            size_hint_x: None
            width: dp(150)
            text: 'Number of pulses'
        Slider:
            id: slider_pulses
            size_hint_y: None
            height: input_pulses.minimum_height
            min: 1
            max: 10
            step: 1
            orientation: 'horizontal'
            on_value: app.reflect_val('slider', input_pulses, slider_pulses, 1, 10, 0)
        TextInput:
            id: input_pulses
            size_hint_y: None
            height: self.minimum_height
            size_hint_x: None
            multiline: False
            width: dp(100)
            text: '1'
            on_text_validate: app.reflect_val('input', input_pulses, slider_pulses, 1, 10, 0)
    BoxLayout:
        id: repeat_pulse
        disabled: True
        spacing: dp(20)
        orientation: 'horizontal'
        Label:
            text: 'Repeat Bursts'
            size_hint_x: None
            width: dp(150)
        Switch:
            id: checkbox_repeat_pulses
            size_hint_x: None
            width: dp(50)
            on_active: app.set_repeat(self.active)
        Label:
            id: every_repeat
            text: 'every'
            size_hint_x: None
            width: dp(70)
        Spinner:
            id: spinner_repeat_pulses
            values: '2s', '5s', '10s'
            text: self.values[0]
    BoxLayout:
        spacing: dp(20)
        Button:
            text: 'Set'
            on_release : app.set_generator(spinner_mode.text, input_freq.text, input_pulses.text)
        Button:
            background_color: (1,0,0)
            text: 'Stop'
            on_release: app.stop_generator()
    Label:
        size_hint_y: None
        height: dp(32)
        font_size: sp(12)
        text: "Wavegen v" + __version__ + " - olivier boesch © 2020-2021 - Lycée saint Exupéry (Marseille)"

<WrappingLabel@Label>
    text_size: self.size
    halign: 'center'
    valign: 'middle'

# Popup shown when connection is impossible at startup
<NoBoxPopup@Popup>
    title: 'Error'
    on_dismiss: app.stop()
    size_hint: 0.7,0.7
    BoxLayout:
        padding: '10dp'
        orientation: 'vertical'
        Image:
            size_hint_y: 0.25
            source: 'disconnected.png'
        WrappingLabel:
            text: 'Leaving Now...\nPlease connect the Control Box to this device and restart the application'
        Button:
            size_hint_y: 0.2
            text: 'Close'
            on_release: root.dismiss();

# Popup shown when disconnection occurs
<DisconnectBoxPopup@Popup>
    title: 'Error'
    on_dismiss: app.stop()
    size_hint: 0.7,0.7
    BoxLayout:
        orientation: 'vertical'
        padding: '10dp'
        Image:
            source: 'disconnected.png'
        WrappingLabel:
            text: 'Leaving now...\nThe control box was disconnected. Please reconnect and restart the application'
        Button:
            size_hint_y: 0.2
            text: 'Close'
            on_release: root.dismiss();